openapi: 3.0.0
info:
  title: Bus Reservation External
  description: >-
    Bus Reservation External | Generate Client Id and Secret from
    http://ticketing.madani.com.np/admin/site-setting/client-secret |  For
    Private routes : Authorization => Bearer <token>
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  contact:
    name: Scodus
    url: https://scodus.com
    email: scodusnp@gmail.com
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: http://ticketing.madani.com.np
    description: Base URL
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: Authentication
  - name: bus
  - name: bus schedule
  - name: bus booking NEW
paths:
  /api-external/token-generate:
    post:
      tags:
        - Authentication
      summary: token generate new method
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                client_id: e7d3f09a-0243-42ce-9898-a787ebccce2c
                client_secret: rV3cfOGm8Ii8IBTzDGI5A8EElhX0sLUPClxyXZL7
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api-external/user:
    get:
      tags:
        - Authentication
      summary: user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api-external/bus-list:
    get:
      tags:
        - bus
      summary: bus list
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api-external/bus-detail/{bus_id}:
    get:
      tags:
        - bus
      summary: bus single detail
      parameters:
        - name: bus_id
          in: path
          schema:
            type: integer
          required: true
          example: '42'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api-external/bus-schedule-list:
    get:
      tags:
        - bus schedule
      summary: bus schedule list
      parameters:
        - name: date
          in: query
          schema:
            type: string
          description: Schedule Bus Date
          example: '2080-08-30'
        - name: route_code
          in: query
          schema:
            type: string
          description: Scheduled Bus Route Code
          example: ktmmnr100
        - name: association_code
          in: query
          schema:
            type: string
          description: Scheduled Bus Association Code
          example: m100
        - name: bus_facility_type_code
          in: query
          schema:
            type: string
          description: Scheduled Bus Facility Type Code
          example: ac100
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api-external/bus-schedule-bus-detail:
    get:
      tags:
        - bus schedule
      summary: bus schedule bus detail
      parameters:
        - name: route_code
          in: query
          schema:
            type: string
          description: Scheduled Bus Route Code
          example: ktmmnr100
        - name: association_code
          in: query
          schema:
            type: string
          description: Scheduled Bus Association Code
          example: m100
        - name: date
          in: query
          schema:
            type: string
          description: Scheduled Bus Date
          example: '2080-08-30'
        - name: bus_facility_type_code
          in: query
          schema:
            type: string
          description: Scheduled Bus Time
          example: ac100
        - name: time
          in: query
          schema:
            type: string
          description: Scheduled Bus Facility Type Code
          example: '20:00'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api-external/bus-schedule-bus-seats/{bus_schedule_id}:
    get:
      tags:
        - bus schedule
      summary: bus schedule bus seats by bus schedule id
      parameters:
        - name: bus_schedule_id
          in: path
          schema:
            type: integer
          required: true
          description: Scheduled Bus Schedule Id
          example: '153'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api-external/bus-schedule:
    post:
      tags:
        - bus schedule
      summary: bus schedule
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                route_code:
                  type: string
                  description: ktmmnr100
                  example: R-002
                bus_id:
                  type: integer
                  description: '38'
                  example: '673'
                departure_date:
                  type: string
                  description: 2080-08-18 BS Format Required
                  example: '2080-08-18'
                departure_date_ad:
                  type: string
                  description: 2023-12-04 AD Format Required
                  example: '2023-12-04'
                departure_time:
                  type: string
                  example: '23:00'
                status:
                  type: string
                  example: Active
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api-external/bus-schedule/{id}/status-change:
    post:
      tags:
        - bus schedule
      summary: status change
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: PUT
                status:
                  type: string
                  example: Active
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '131'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api-external/bus-schedule/{id}/booking-status-change:
    post:
      tags:
        - bus schedule
      summary: booking status change
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: PUT
                booking_status:
                  type: string
                  example: Open
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '131'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api-external/bus-schedule/{id}/departure-time-change:
    post:
      tags:
        - bus schedule
      summary: departure time change
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                _method:
                  type: string
                  example: PUT
                departure_time:
                  type: string
                  example: '21:00'
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '131'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api-external/pre-booking:
    get:
      tags:
        - bus booking NEW
      summary: pre booking
      security:
        - bearerAuth: []
      parameters:
        - name: schedule_id
          in: query
          schema:
            type: integer
          description: 'Bus Schedule Id '
          example: '153'
        - name: date
          in: query
          schema:
            type: string
          description: Scheduled Bus Date
          example: '2080-08-30'
        - name: seat_name[]
          in: query
          schema:
            type: string
          description: Bus Seat Name
          example: A4
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api-external/pre-booking-timeout:
    post:
      tags:
        - bus booking NEW
      summary: pre booking timeout
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                schedule_id:
                  type: integer
                  description: Bus Seat Name
                  example: '127'
                seat_name[]:
                  type: string
                  description: Scheduled Bus Route Code
                  example: GHA
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api-external/bus-booking:
    post:
      tags:
        - bus booking NEW
      summary: store booking
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                schedule_id: 153
                drop_location: drop location here000
                rate: 15
                discount: 6
                contact_name: Bikash SinghTEST
                contact_phone: '98713264000'
                seat_name:
                  - A4
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api-external/my-booking:
    get:
      tags:
        - bus booking NEW
      summary: my booking history
      security:
        - bearerAuth: []
      parameters:
        - name: from_date
          in: query
          schema:
            type: string
          description: Departure Date From
          example: '2080-05-30'
        - name: to_date
          in: query
          schema:
            type: string
          description: Departure Date To
          example: '2080-08-30'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api-external/bus-booking/{booking_id}/cancel:
    post:
      tags:
        - bus booking NEW
      summary: cancel  whole booking
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: booking_id
          in: path
          schema:
            type: integer
          required: true
          example: '661'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api-external/bus-booking/{booking_id}/seat-cancel:
    post:
      tags:
        - bus booking NEW
      summary: seat wise cancel
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                remaning_booked_seat_name:
                  - B2
                  - GHA
      security:
        - bearerAuth: []
      parameters:
        - name: booking_id
          in: path
          schema:
            type: integer
          required: true
          example: '663'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
